// <auto-generated />
using System;
using MessageBoard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MessageBoard.Migrations
{
    [DbContext(typeof(MessageBoardContext))]
    [Migration("20200818202241_DataSeedingUser")]
    partial class DataSeedingUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MessageBoard.Models.Board", b =>
                {
                    b.Property<int>("BoardId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("BoardId");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            BoardId = 1,
                            Description = "General discussions about computer programming i.e., best prectices, tips-and-trick, etc...",
                            Name = "Programming"
                        },
                        new
                        {
                            BoardId = 2,
                            Description = "A place where we can share cute things our pets have done",
                            Name = "Pets"
                        },
                        new
                        {
                            BoardId = 3,
                            Description = "Trading nutrition tips, recipes, and support",
                            Name = "Diet/Nutrition"
                        },
                        new
                        {
                            BoardId = 4,
                            Description = "A friendly chat about what video games we are playing these days",
                            Name = "Video Games"
                        },
                        new
                        {
                            BoardId = 5,
                            Description = "Best places to eat around Portland",
                            Name = "Eats!"
                        });
                });

            modelBuilder.Entity("MessageBoard.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BoardId");

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<DateTime>("DatePosted");

                    b.Property<string>("Heading")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("MessageId");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MessageBoard.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Token");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Admin",
                            LastName = "User",
                            Password = "admin",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Normal",
                            LastName = "User",
                            Password = "user",
                            Role = "User",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("MessageBoard.Models.Message", b =>
                {
                    b.HasOne("MessageBoard.Models.Board", "Board")
                        .WithMany("Messages")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
